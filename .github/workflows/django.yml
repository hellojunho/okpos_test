name: Django commit

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    # services:
    #   db:
    #     image: postgres:latest
    #     env:
    #       POSTGRES_DB: postgres
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #     ports:
    #       - 5432:5432
    #     options: >-
    #       --health-cmd="pg_isready -U postgres"
    #       --health-interval=10s
    #       --health-timeout=5s
    #       --health-retries=5

    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      ENVIRONMENT: ${{ secrets.ENVIRONMENT }}
      DB_ENGINE: ${{ secrets.DB_ENGINE }}
      DB_HOST: localhost
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_PORT: 5432

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Docker Compose v2
        run: |
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/v2.29.7/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
          docker compose version

      - name: Start containers
        run: |
          docker-compose up -d
          docker ps -a

      - name: Wait for DB
        run: |
          until pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER; do
            echo "‚è≥ Waiting for database..."
            sleep 2
          done

      - name: Run migrations
        run: |
          docker compose run --rm web python manage.py migrate

      - name: Run tests
        run: |
          docker compose run --rm web pytest -v -s --ds=config.settings shop/tests/*
